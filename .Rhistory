theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank())
p2 <- plot_model(m.fit, type = "pred", terms = c("ep", "good"))
p2 <- p2 +
theme_bw() +
labs(x = "prediction error", y = "update", title = "") +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.title=element_blank())
p1 + p2
p3 <- plot_model(m.fit, type = "pred", terms = c("scoreOptimismo", "good"))
p4 <- plot_model(m.fit, type = "pred", terms = c("scoreAnsiedad", "good"))
p3 <- p3 +
theme_bw() +
labs(x = "optimism", y = "update", title = "") +
ylim(0,0.3) +
xlim(13,22) +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.position='none') +
labs(colour = "")
p4 <- p4 +
theme_bw() +
labs(x = "anxiety", y = "update", title = "") +
ylim(0,0.3) +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
labs(colour = "")
p3 + p4
require(tidyverse)
require(brms)
require(sjPlot)
require(patchwork)
require(ggExtra)
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
# sujeto x sujeto
dexp1.suj1 = dexp1[dexp1$subj==7,]
fit1 <- brm(scr1 ~ good*ep + (good*ep | subj),
data = dexp1.suj1,
seed = 100
)
summary(fit1)
unique(dexp1$subj)
dexp.ind = dexp1[dexp1$subj==i,]
i=1
dexp.ind = dexp1[dexp1$subj==i,]
coef(lm(scr1 ~ good*ep, data=dexp.ind))
coef(lm(scr1 ~ good*ep, data=dexp.ind))[4]
#######
beta.scr1 = rep(NA, 33)
beta.scr1 = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i,]
beta.scr1[i] = coef(lm(scr1 ~ good*ep, data=dexp.ind))[4]
}
hist(beta.scr1)
dexp.ind
dexp.ind$scoreAnsiedad
beta.scr1 = rep(NA, 33)
ans.ind = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i,]
beta.scr1[i] = coef(lm(scr1 ~ good*ep, data=dexp.ind))[4]
ans.ind[i] = dexp.ind$scoreAnsiedad[1]
}
beta.scr1
ans.ind
plot(ans.ind,beta.scr1)
summary(lm(ans.ind,beta.scr1)))
summary(lm(ans.ind,beta.scr1))
summary(lm(ans.ind~beta.scr1))
#######
beta.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
i=1
dexp.ind = dexp1[dexp1$subj==i,]
coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[4]
coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))
dexp1$memory2
#######
beta.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[i] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[i] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[i] = dexp.ind$scoreAnsiedad[1]
}
#######
beta1.mem2 = rep(NA, 33)
beta2.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[i] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[i] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[i] = dexp.ind$scoreAnsiedad[1]
}
i
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
dexp.ind
1:33-4
setdiff(1:33,4)
i
#######
beta1.mem2 = rep(NA, 33)
beta2.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
k = 1
for (i in setdiff(1:33,5)){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
i
#######
beta1.mem2 = rep(NA, 33)
beta2.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
#######
beta1.mem2 = rep(NA, 33)
beta2.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
k = 1
#######
beta1.mem2 = rep(NA, 33)
beta2.mem2 = rep(NA, 33)
ans.ind = rep(NA, 33)
k = 1
for (i in setdiff(1:33,c(5,7))){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
i
dexp1$memory2
dd = dexp1[dexp1$memory2<3,]
dd
unique(dd$subj)
length( unique(dd$subj) )
dd = dexp1[dexp1$memory2<3,]
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in unique(dd$subj)){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
plot(ans.ind,beta.scr1)
dd = dexp1[dexp1$memory2<3,]
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in unique(dd$subj)){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
plot(ans.ind,beta1.mem2)
plot(ans.ind,beta2.mem2)
summary(lm(ans.ind~beta1.mem2))
summary(lm(ans.ind~beta2.mem2))
q()
require(tidyverse)
require(brms)
require(sjPlot)
require(patchwork)
require(ggExtra)
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
beta.scr1 = rep(NA, 33)
ans.ind = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i,]
beta.scr1[i] = coef(lm(scr1 ~ good*ep, data=dexp.ind))[4]
ans.ind[i] = dexp.ind$scoreAnsiedad[1]
}
plot(ans.ind,beta.scr1)
summary(lm(ans.ind~beta.scr1))
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in unique(dd$subj)){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
plot(ans.ind,beta1.mem2)
#######
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in unique(dd$subj)){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
Ns = unique(dexp1[dexp1$memory2<3,'subj'])
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
Ns = unique(dexp1[dexp1$memory2<3,'subj'])
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in Ns){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
plot(ans.ind,beta1.mem2)
plot(ans.ind,beta2.mem2)
Ns = unique(dexp1[dexp1$memory2<3,'subj'])
beta1.mem2 = rep(NA, 23)
beta2.mem2 = rep(NA, 23)
ans.ind = rep(NA, 23)
k = 1
for (i in Ns){
dexp.ind = dexp1[dexp1$subj==i & dexp1$memory2<3,]
beta1.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[5]
beta2.mem2[k] = coef(lm(memory2 ~ good * ep + good * update, data=dexp.ind))[6]
ans.ind[k] = dexp.ind$scoreAnsiedad[1]
k = k + 1
}
plot(ans.ind,beta1.mem2)
plot(ans.ind,beta2.mem2)
summary(lm(ans.ind~beta1.mem2))
summary(lm(ans.ind~beta2.mem2))
# sujeto x sujeto
dexp1.suj1 = dexp1[dexp1$subj==7,]
summary(lm(scr1 ~ good*ep, data=dexp1.suj1))
dexp.ind$scoreAnsiedad
opt.ind = rep(NA, 33)
for (i in 1:33){
dexp.ind = dexp1[dexp1$subj==i,]
beta.scr1[i] = coef(lm(scr1 ~ good*ep, data=dexp.ind))[4]
ans.ind[i] = dexp.ind$scoreAnsiedad[1]
opt.ind[i] = dexp.ind$scoreOptimismo[1]
}
plot(ans.ind,beta.scr1)
plot(opt.ind,beta.scr1)
summary(lm(opt.ind~beta.scr1))
lm(scr1 ~ good*ep, data=dexp.ind)
plot(ans.ind,beta.scr1)
summary(lm(ans.ind~beta.scr1))
plot(opt.ind,beta.scr1)
summary(lm(opt.ind~beta.scr1))
lm(scr1 ~ good*ep, data = dexp1)
summary( lm(scr1 ~ good*ep, data = dexp1) )
range(dexp1$scr1)
hist(dexp1$scr1)
summary(scr1~scoreAnsiedad, data=dexp1)
summary(lm(scr1~scoreAnsiedad, data=dexp1))
summary(lm(scr1~scoreAnsiedad, data=dexp1))
summary(lm(scr1~scoreOptimismo, data=dexp1))
summary(lm(scr1~scoreAnsiedad, data=dexp1))
summary(lm(scr1~scoreAnsiedad*good, data=dexp1))
#### Ejercicio 1 ####
# A partir del siguiente gráfico, investigar cómo se usa y qué hace
# el `geom_rug `. Agreguen una capa de geom_rug al plot existente
# pero que no use el mapeo de species en color.
#
# ¿Qué hace `theme_minimal()`? ¿Hay otros themes que se pueden usar?
require(tidyverse)
require(palmerpenguins)
penguins %>%
drop_na(bill_length_mm, bill_depth_mm) %>%
ggplot(mapping = aes(x = bill_depth_mm,
y = bill_length_mm,
color = species) )  +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
penguins %>%
drop_na(bill_length_mm, bill_depth_mm) %>%
ggplot(mapping = aes(x = bill_depth_mm,
y = bill_length_mm) )  +
geom_point() +
geom_smooth(method = "lm",
color = "black") +
theme_classic()
source("~/Dropbox/work/2021/belief-update/Analysis/exp1_01.R", echo=TRUE)
View(dexp1)
View(dexp1)
require(sjstats)
tidy_stan(m.fit)
library(easystats)
install.packages("easystats")
install.packages("easystats")
install.packages("easystats")
load("data/exp1_data.RData")
m.fit <- lme4::lmer(update ~
good * ep +
good * pT +
(1 | subj),
data = dexp1)
m.fit <- lme4::lmer(update ~
I * ep +
I * pT +
(1 | subj),
data = dexp1)
summary(m.fit)
m.fit = brm(file = "Analysis/model_fits/fit_exp1")
require(tidyverse)
require(brms)
require(sjstats)
require(sjPlot)
require(sjPlot)
require(patchwork)
require(ggExtra)
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
m.fit = brm(file = "Analysis/model_fits/fit_exp1")
tidy_stan(m.fit)
p1 <- plot_model(m.fit, type = "pred", terms = "good")
require(tidyverse)
require(brms)
require(sjstats)
require(sjPlot)
install.packages("sjPlot")
require(sjPlot)
require(patchwork)
require(ggExtra)
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
m.fit = brm(file = "Analysis/model_fits/fit_exp1")
tidy_stan(m.fit)
p1 <- plot_model(m.fit, type = "pred", terms = "good")
p1 <- p1 +
theme_bw() +
labs(y = "update", title = "") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank())
p2 <- plot_model(m.fit, type = "pred", terms = c("ep", "good"))
p2 <- p2 +
theme_bw() +
labs(x = "prediction error", y = "update", title = "") +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.title=element_blank())
p1 + p2
p3 <- plot_model(m.fit, type = "pred", terms = c("scoreOptimismo", "good"))
p4 <- plot_model(m.fit, type = "pred", terms = c("scoreAnsiedad", "good"))
p3 <- p3 +
theme_bw() +
labs(x = "optimism", y = "update", title = "") +
ylim(0,0.3) +
xlim(13,22) +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.position='none') +
labs(colour = "")
p4 <- p4 +
theme_bw() +
labs(x = "anxiety", y = "update", title = "") +
ylim(0,0.3) +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
labs(colour = "")
p3 + p4
p1 <- plot_model(m.fit, type = "pred", terms = c("ep", "scoreOptimismo", "good"))
p2 <- plot_model(m.fit, type = "pred", terms = c("ep", "scoreAnsiedad", "good"))
p1 <- p1 +
theme_bw() +
labs(x = "prediction error", y = "update", title = "") +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
guides(col= guide_legend(title= "optimism score")) +
labs(colour = "")
p2 <- p2 +
theme_bw() +
labs(x = "prediction error", y = "update", title = "") +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
guides(col= guide_legend(title= "anxiety score")) +
labs(colour = "")
p1 / p2
d <- dexp1 %>%
group_by(subj) %>%
mutate(anx = first(scoreAnsiedad), opt = first(scoreOptimismo))
p <- ggplot(aes(x = anx, y = opt), data = d) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "anxiety", y = "optimism", title = "")
p <- ggMarginal(p, type="histogram", 'binwidth = x')
p
m1 <- brm(p1 ~ scoreOptimismo + (1 | subj), data = dexp1, file = "Analysis/model_fits/p1opt_exp1")
m2 <- brm(p1 ~ scoreAnsiedad + (1 | subj), data = dexp1, file = "Analysis/model_fits/p1ans_exp1")
m1 = brm(file = "Analysis/model_fits/p1opt_exp1")
m2 = brm(file = "Analysis/model_fits/p1ans_exp1")
p1 <- plot_model(m1, type = "pred", terms = c("scoreOptimismo"))
p2 <- plot_model(m2, type = "pred", terms = c("scoreAnsiedad"))
p1 <- p1 + theme_bw() +
labs(x = "optimism", y = "p1", title = "") +
xlim(13,25) +
ylim(0.2,0.5) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
labs(colour = "")
p2 <- p2 + theme_bw() +
labs(x = "anxiety", y = "p1", title = "") +
xlim(18,35) +
ylim(0.2,0.5) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()) +
labs(colour = "")
p1 + p2
load("data/exp1_data.RData")
dexp1 <- mutate(dexp1, good = factor(ifelse(I==0, "bad news", "good news")))
View(dexp1)
m.fit = brm(file = "Analysis/model_fits/fit_exp1")
p1 <- plot_model(m.fit, type = "pred", terms = "good")
p1 <- p1 +
theme_bw() +
labs(y = "update", title = "") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank())
p2 <- plot_model(m.fit, type = "pred", terms = c("ep", "good"))
p2 <- p2 +
theme_bw() +
labs(x = "prediction error", y = "update", title = "") +
theme(axis.title.x=element_text(vjust=-4)) +
theme(axis.title.y=element_text(vjust=+6)) +
theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
legend.title=element_blank())
p1 + p2
